// Code generated by MockGen. DO NOT EDIT.
// Source: go.anx.io/go-anxcloud/pkg/ipam (interfaces: API)

// Package legacyapimock is a generated GoMock package.
package legacyapimock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	address "go.anx.io/go-anxcloud/pkg/ipam/address"
	prefix "go.anx.io/go-anxcloud/pkg/ipam/prefix"
)

// MockIPAMAPI is a mock of API interface.
type MockIPAMAPI struct {
	ctrl     *gomock.Controller
	recorder *MockIPAMAPIMockRecorder
}

// MockIPAMAPIMockRecorder is the mock recorder for MockIPAMAPI.
type MockIPAMAPIMockRecorder struct {
	mock *MockIPAMAPI
}

// NewMockIPAMAPI creates a new mock instance.
func NewMockIPAMAPI(ctrl *gomock.Controller) *MockIPAMAPI {
	mock := &MockIPAMAPI{ctrl: ctrl}
	mock.recorder = &MockIPAMAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPAMAPI) EXPECT() *MockIPAMAPIMockRecorder {
	return m.recorder
}

// Address mocks base method.
func (m *MockIPAMAPI) Address() address.API {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Address")
	ret0, _ := ret[0].(address.API)
	return ret0
}

// Address indicates an expected call of Address.
func (mr *MockIPAMAPIMockRecorder) Address() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Address", reflect.TypeOf((*MockIPAMAPI)(nil).Address))
}

// Prefix mocks base method.
func (m *MockIPAMAPI) Prefix() prefix.API {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Prefix")
	ret0, _ := ret[0].(prefix.API)
	return ret0
}

// Prefix indicates an expected call of Prefix.
func (mr *MockIPAMAPIMockRecorder) Prefix() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Prefix", reflect.TypeOf((*MockIPAMAPI)(nil).Prefix))
}
