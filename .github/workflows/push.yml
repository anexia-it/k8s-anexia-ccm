on:
  push: {}
  release:
    types:
      - published
name: CI Build & Test
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - uses: paambaati/codeclimate-action@v8.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_COVERAGE_ID }}
        with:
          prefix: github.com/anexia-it/k8s-anexia-ccm
          coverageCommand: make test
          coverageLocations: coverage.out:gocov

  build:
    runs-on: ubuntu-latest
    if:      "github.actor != 'dependabot[bot]'"
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_SECRET }}
          registry: anx-cr.io
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            anx-cr.io/anexia/anx-cloud-controller-manager
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: version=${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
          tags: |
            ${{ steps.meta.outputs.tags }}

  docker-scan:
    runs-on: ubuntu-latest
    if: "github.actor != 'dependabot[bot]'"
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Get Image Tag
        run: echo "tag=sha-${GITHUB_SHA::7}" >>$GITHUB_OUTPUT
        shell: bash
        id: git

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'anx-cr.io/anexia/anx-cloud-controller-manager:${{ steps.git.outputs.tag }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          trivyignores: .trivyignore

  docs:
    runs-on: ubuntu-latest
    permissions:
      contents:    read
      pages:       write
      id-token:    write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if:      "github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme sphinx-multiversion

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: build docs
        run:  make versioned-docs

      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html
          name: github-pages
          if-no-files-found: warn

      - id: deployment
        uses: actions/deploy-pages@v4
